{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"p",
				"pixel_width"
			],
			[
				"th",
				"thickness_factor"
			],
			[
				"tri",
				"triangle_overlay"
			],
			[
				"stroke",
				"stroke_opacity"
			],
			[
				"set",
				"set_opacity"
			],
			[
				"a",
				"animate"
			],
			[
				"squ",
				"square_size_x"
			],
			[
				"dis",
				"distance_from_center"
			],
			[
				"grd",
				"ground"
			],
			[
				"gr",
				"grid_size"
			],
			[
				"sq",
				"squares_y"
			],
			[
				"gri",
				"grid_size"
			],
			[
				"fr",
				"frame_height"
			],
			[
				"Le",
				"LEFT"
			],
			[
				"m",
				"make_rigid_body"
			],
			[
				"make",
				"make_static_body"
			],
			[
				"square",
				"square_size"
			],
			[
				"cre",
				"create_triangle_grid_overlay"
			],
			[
				"li",
				"line1"
			],
			[
				"mak",
				"make_rigid_body"
			],
			[
				"f",
				"full_curve"
			],
			[
				"file",
				"file_path"
			],
			[
				"re",
				"render_settings"
			],
			[
				"ac",
				"actions"
			],
			[
				"spe",
				"specify_parameters"
			],
			[
				"right_s",
				"right_semi_circle"
			],
			[
				"sn",
				"snap_start"
			],
			[
				"hei",
				"height_bias"
			],
			[
				"cur",
				"curvature_spline"
			],
			[
				"cy",
				"cylinder"
			],
			[
				"interf",
				"interface"
			],
			[
				"pro",
				"projection_types"
			],
			[
				"specif",
				"specify_parameters"
			],
			[
				"right",
				"right_eye"
			],
			[
				"spec",
				"specify_creation"
			],
			[
				"cus",
				"CustomObject"
			],
			[
				"C",
				"CustomObject"
			],
			[
				"rig",
				"right_eye"
			],
			[
				"inter",
				"interface_guy"
			],
			[
				"fill",
				"filled"
			],
			[
				"lef",
				"left_to_right"
			],
			[
				"dia",
				"diameter"
			],
			[
				"cr",
				"crop_talk"
			],
			[
				"M",
				"Membrane"
			],
			[
				"met",
				"meta_lens"
			],
			[
				"w",
				"warm_lens_fill"
			],
			[
				"d",
				"desc_id"
			],
			[
				"wa",
				"warm_lens_border"
			],
			[
				"war",
				"warm_lens_border"
			],
			[
				"un",
				"un_fill"
			],
			[
				"specify",
				"specify_action_interval"
			],
			[
				"gene",
				"generation_mode"
			],
			[
				"ini",
				"initial_visibility_port"
			],
			[
				"no",
				"not_node_final"
			],
			[
				"G",
				"GetOutPort"
			],
			[
				"o",
				"object_ini"
			],
			[
				"_",
				"__class__"
			],
			[
				"Lin",
				"LineObject"
			],
			[
				"mos",
				"mospline"
			],
			[
				"pr",
				"priority"
			],
			[
				"rel_s",
				"rel_stop"
			],
			[
				"rel",
				"rel_start"
			],
			[
				"in",
				"input_spline"
			],
			[
				"inpu",
				"input_spline"
			],
			[
				"spl",
				"spline_masks"
			],
			[
				"de",
				"desc_id"
			],
			[
				"explosion",
				"explosion_radius_parameter"
			],
			[
				"ID_BASEOBJECT_P",
				"ID_BASEOBJECT_POSITION"
			],
			[
				"create_dis",
				"create_distance_nodes"
			],
			[
				"crea",
				"create_part_node"
			],
			[
				"expl",
				"explosion_radius"
			],
			[
				"movem",
				"movements"
			],
			[
				"gen",
				"generation_mode"
			],
			[
				"mospl",
				"mospline"
			],
			[
				"PO",
				"POS_Y"
			],
			[
				"__",
				"__init__"
			],
			[
				"warm",
				"warm_lens_border"
			],
			[
				"len",
				"lens"
			],
			[
				"specify_",
				"specify_relations"
			],
			[
				"R",
				"RED"
			],
			[
				"gl",
				"glow_parameter"
			],
			[
				"Visi",
				"VisibleMoSpline"
			],
			[
				"sk",
				"sketch_parameter_setup"
			],
			[
				"sou",
				"source_spline"
			],
			[
				"mo",
				"morpher"
			],
			[
				"Insert",
				"InsertUnder"
			],
			[
				"dynamic_membrane_",
				"dynamic_membrane_length_right_parameter"
			],
			[
				"dyn",
				"dynamic_membrane_length_left_parameter"
			],
			[
				"desc",
				"desc_id"
			],
			[
				"peer",
				"peer_count_parameter"
			],
			[
				"peers",
				"peers_right"
			],
			[
				"destination",
				"destination_splines"
			],
			[
				"split_membrane_ac",
				"split_membrane_action_parameter"
			],
			[
				"split",
				"split_distance_parameter"
			],
			[
				"morph_comple",
				"morph_completion_parameter"
			],
			[
				"Spl",
				"SplineMask"
			],
			[
				"ed",
				"edges"
			],
			[
				"pee",
				"peer_color"
			],
			[
				"split_membrane_",
				"split_membrane_left"
			],
			[
				"clo",
				"clone_connector"
			],
			[
				"impo",
				"importlib"
			],
			[
				"targ",
				"target_object"
			],
			[
				"max",
				"max_distance_parameter"
			],
			[
				"n",
				"neighbour_count_parameter"
			],
			[
				"ne",
				"neighbour_count_parameter"
			],
			[
				"GV_OBJECT_OBJE",
				"GV_OBJECT_OPERATOR_OBJECT_OUT"
			],
			[
				"get_s",
				"get_segment_count"
			],
			[
				"anim",
				"animations"
			],
			[
				"zoo",
				"zoom_animation"
			],
			[
				"scree",
				"screen_border"
			],
			[
				"laptop",
				"laptop_right"
			],
			[
				"tar",
				"target_radius"
			],
			[
				"inti",
				"__init__"
			],
			[
				"T",
				"ThreeDCamera"
			],
			[
				"fou",
				"focus_point_z_parameter"
			],
			[
				"focus",
				"focus_point_y_parameter"
			],
			[
				"focus_point_",
				"focus_point_x_parameter"
			],
			[
				"focu",
				"focus_point_x"
			],
			[
				"foc",
				"focus_point_x"
			],
			[
				"POS",
				"POS_Z"
			],
			[
				"ra",
				"radius_parameter"
			],
			[
				"tilt",
				"tilt_parameter"
			],
			[
				"the",
				"theta_parameter"
			],
			[
				"or",
				"orbit"
			],
			[
				"paramet",
				"parameter_port"
			],
			[
				"parameter",
				"parameter_node"
			],
			[
				"segment",
				"segment_count_ini"
			],
			[
				"fiel",
				"field_length_parameter"
			]
		]
	},
	"buffers":
	[
		{
			"file": "StereographicProjection.py",
			"settings":
			{
				"buffer_size": 3170,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAJAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "from"
					},
					"BAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " manim"
					},
					"BgAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " import"
					},
					"BwAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " ***"
					},
					"BAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					2,
					"left_delete",
					null,
					"AgAAABQAAAAAAAAAFAAAAAAAAAABAAAAKhMAAAAAAAAAEwAAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAANAAAAAAAAAA0QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAAExA"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "major_ra"
					},
					"EgAAAH8BAAAAAAAAgAEAAAAAAAAAAAAAgAEAAAAAAACAAQAAAAAAAAIAAAByMVwBAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABdAQAAAAAAAAIAAAByMX8BAAAAAAAAgAEAAAAAAAAAAAAAXQEAAAAAAABeAQAAAAAAAAAAAACBAQAAAAAAAIIBAAAAAAAAAAAAAF4BAAAAAAAAXwEAAAAAAAAAAAAAgwEAAAAAAACEAQAAAAAAAAAAAABfAQAAAAAAAGABAAAAAAAAAAAAAIUBAAAAAAAAhgEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAACHAQAAAAAAAIgBAAAAAAAAAAAAAGEBAAAAAAAAYgEAAAAAAAAAAAAAiQEAAAAAAACKAQAAAAAAAAAAAABiAQAAAAAAAGMBAAAAAAAAAAAAAIsBAAAAAAAAjAEAAAAAAAAAAAAAYwEAAAAAAABkAQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAXAEAAAAAAABeAQAAAAAAAAAAAAAAAPC/fwEAAAAAAACBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "dius"
					},
					"CAAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAZAEAAAAAAABlAQAAAAAAAAAAAACPAQAAAAAAAJABAAAAAAAAAAAAAGUBAAAAAAAAZgEAAAAAAAAAAAAAkQEAAAAAAACSAQAAAAAAAAAAAABmAQAAAAAAAGcBAAAAAAAAAAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAZwEAAAAAAABoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAZAEAAAAAAABkAQAAAAAAAAAAAAAAAPC/jQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					2,
					"left_delete",
					null,
					"BAAAAJoBAAAAAAAAmgEAAAAAAAABAAAAMm0BAAAAAAAAbQEAAAAAAAABAAAAMpgBAAAAAAAAmAEAAAAAAAABAAAAcmwBAAAAAAAAbAEAAAAAAAABAAAAcg",
					"AQAAAAAAAAACAAAAbgEAAAAAAABuAQAAAAAAAAAAAAAAAPC/mwEAAAAAAACbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "minor_ra"
					},
					"EAAAAJcBAAAAAAAAmAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAACZAQAAAAAAAJoBAAAAAAAAAAAAAG0BAAAAAAAAbgEAAAAAAAAAAAAAmwEAAAAAAACcAQAAAAAAAAAAAABuAQAAAAAAAG8BAAAAAAAAAAAAAJ0BAAAAAAAAngEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAACfAQAAAAAAAKABAAAAAAAAAAAAAHABAAAAAAAAcQEAAAAAAAAAAAAAoQEAAAAAAACiAQAAAAAAAAAAAABxAQAAAAAAAHIBAAAAAAAAAAAAAKMBAAAAAAAApAEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAHMBAAAAAAAAdAEAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAbAEAAAAAAABsAQAAAAAAAAAAAAAAAPC/lwEAAAAAAACXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "dius"
					},
					"CAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAdAEAAAAAAAB1AQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAHUBAAAAAAAAdgEAAAAAAAAAAAAAqwEAAAAAAACsAQAAAAAAAAAAAAB2AQAAAAAAAHcBAAAAAAAAAAAAAK0BAAAAAAAArgEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAdAEAAAAAAAB0AQAAAAAAAAAAAAAAAPC/pwEAAAAAAACnAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "(base) davidrug@Davids-MBP-2 StereographicProjection %                      \n(base) davidrug@Davids-MBP-2 StereographicProjection %                      \n(base) davidrug@Davids-MBP-2 StereographicProjection %                      \n(base) davidrug@Davids-MBP-2 StereographicProjection %                      \n(base) davidrug@Davids-MBP-2 StereographicProjection %                      \n(base) davidrug@Davids-MBP-2 StereographicProjection %                      \n(base) davidrug@Davids-MBP-2 StereographicProjection % manimenv                                                                                 \n(manim) davidrug@Davids-MBP-2 StereographicProjection % manim StereographicProjection.py -pql                                                   \nManim Community v0.17.3\n\nTraceback (most recent call last):\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/bin/manim\", line 8, in <module>\n    sys.exit(main())\n             ^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 1157, in __call__\n    return self.main(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 1078, in main\n    rv = self.invoke(ctx)\n         ^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 1688, in invoke\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 1434, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 783, in invoke\n    return __callback(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/cli/render/commands.py\", line 111, in render\n    for SceneClass in scene_classes_from_file(file):\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/utils/module_ops.py\", line 129, in scene_classes_fro​‌​\nm_file\n    module = get_module(file_path)\n             ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/utils/module_ops.py\", line 52, in get_module\n    spec.loader.exec_module(module)\n  File \"<frozen importlib._bootstrap_external>\", line 940, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\n  File \"/Users/davidrug/Library/Mobile Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection/StereographicProjection.py\", li​‌​\nne 1, in <module>\n    class SurfaceExample(Scene):\n                         ^^^^^\nNameError: name 'Scene' is not defined\n(manim) davidrug@Davids-MBP-2 StereographicProjection % manim StereographicProjection.py -pql                                                   \nManim Community v0.17.3\n\nTraceback (most recent call last):\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/bin/manim\", line 8, in <module>\n    sys.exit(main())\n             ^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 1157, in __call__\n    return self.main(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 1078, in main\n    rv = self.invoke(ctx)\n         ^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 1688, in invoke\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 1434, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/click/core.py\", line 783, in invoke\n    return __callback(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/cli/render/commands.py\", line 111, in render\n    for SceneClass in scene_classes_from_file(file):\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/utils/module_ops.py\", line 129, in scene_classes_fro​‌​\nm_file\n    module = get_module(file_path)\n             ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/utils/module_ops.py\", line 52, in get_module\n    spec.loader.exec_module(module)\n  File \"<frozen importlib._bootstrap_external>\", line 940, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\n  File \"/Users/davidrug/Library/Mobile Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection/StereographicProjection.py\", li​‌​\nne 1, in <module>\n    class SurfaceExample(ThreeDScene):\n                         ^^^^^^^^^^^\nNameError: name 'ThreeDScene' is not defined\n(manim) davidrug@Davids-MBP-2 StereographicProjection % manim StereographicProjection.py -pql                                                   \nManim Community v0.17.3\n\n╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/cli/render/c │\n│ ommands.py:115 in render                                                                         │\n│                                                                                                  │\n│   112 │   │   │   try:                                                                           │\n│   113 │   │   │   │   with tempconfig({}):                                                       │\n│   114 │   │   │   │   │   scene = SceneClass()                                                   │\n│ ❱ 115 │   │   │   │   │   scene.render()                                                         │\n│   116 │   │   │   except Exception:                                                              │\n│   117 │   │   │   │   error_console.print_exception()                                            │\n│   118 │   │   │   │   sys.exit(1)                                                                │\n│                                                                                                  │\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/scene/scene. │\n│ py:223 in render                                                                                 │\n│                                                                                                  │\n│    220 │   │   \"\"\"                                                                               │\n│    221 │   │   self.setup()                                                                      │\n│    222 │   │   try:                                                                              │\n│ ❱  223 │   │   │   self.construct()                                                              │\n│    224 │   │   except EndSceneEarlyException:                                                    │\n│    225 │   │   │   pass                                                                          │\n│    226 │   │   except RerunSceneException as e:                                                  │\n│                                                                                                  │\n│ /Users/davidrug/Library/Mobile                                                                   │\n│ Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection/StereographicProjectio │\n│ n.py:10 in construct                                                                             │\n│                                                                                                  │\n│    7 │                                                                                           │\n│    8 │   def construct(self):                                                                    │\n│    9 │   │   surface_text = Text(\"For 3d scenes, try using surfaces\")                            │\n│ ❱ 10 │   │   surface_text.fix_in_frame()                                                         │\n│   11 │   │   surface_text.to_edge(UP)                                                            │\n│   12 │   │   self.add(surface_text)                                                              │\n│   13 │   │   self.wait(0.1)                                                                      │\n│                                                                                                  │\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/mobject/mobj │\n│ ect.py:662 in __getattr__                                                                        │\n│                                                                                                  │\n│    659 │   │   │   return types.MethodType(setter, self)                                         │\n│    660 │   │                                                                                     │\n│    661 │   │   # Unhandled attribute, therefore error                                            │\n│ ❱  662 │   │   raise AttributeError(f\"{type(self).__name__} object has no attribute '{attr}'\")   │\n│    663 │                                                                                         │\n│    664 │   @property                                                                             │\n│    665 │   def width(self):                                                                      │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────╯\nAttributeError: Text object has no attribute 'fix_in_frame'\n(manim) davidrug@Davids-MBP-2 StereographicProjection % manim StereographicProjection.py -pql                                                   \nManim Community v0.17.3\n\n[01/20/24 20:55:20] INFO     Animation 0 : Partial movie file written in '/Users/davidrug/Library/Mobile                \n                                                                                                                                                ​‌​\n     Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection/media/videos/Ste                         \n                             reographicProjection/480p15/partial_movie_files/SurfaceExample/4266129954_51972775_3442269                         \n                             408.mp4'                                                                                                           \n╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/cli/render/c │\n│ ommands.py:115 in render                                                                         │\n│                                                                                                  │\n│   112 │   │   │   try:                                                                           │\n│   113 │   │   │   │   with tempconfig({}):                                                       │\n│   114 │   │   │   │   │   scene = SceneClass()                                                   │\n│ ❱ 115 │   │   │   │   │   scene.render()                                                         │\n│   116 │   │   │   except Exception:                                                              │\n│   117 │   │   │   │   error_console.print_exception()                                            │\n│   118 │   │   │   │   sys.exit(1)                                                                │\n│                                                                                                  │\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/scene/scene. │\n│ py:223 in render                                                                                 │\n│                                                                                                  │\n│    220 │   │   \"\"\"                                                                               │\n│    221 │   │   self.setup()                                                                      │\n│    222 │   │   try:                                                                              │\n│ ❱  223 │   │   │   self.construct()                                                              │\n│    224 │   │   except EndSceneEarlyException:                                                    │\n│    225 │   │   │   pass                                                                          │\n│    226 │   │   except RerunSceneException as e:                                                  │\n│                                                                                                  │\n│ /Users/davidrug/Library/Mobile                                                                   │\n│ Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection/StereographicProjectio │\n│ n.py:15 in construct                                                                             │\n│                                                                                                  │\n│   12 │   │   self.add(surface_text)                                                              │\n│   13 │   │   self.wait(0.1)                                                                      │\n│   14 │   │                                                                                       │\n│ ❱ 15 │   │   torus1 = Torus(r1=1, r2=1)                                                          │\n│   16 │   │   torus2 = Torus(r1=3, r2=1)                                                          │\n│   17 │   │   sphere = Sphere(radius=3, resolution=torus1.resolution)                             │\n│   18 │   │   # You can texture a surface with up to two images, which will                       │\n│                                                                                                  │\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/mobject/thre │\n│ e_d/three_dimensions.py:1197 in __init__                                                         │\n│                                                                                                  │\n│   1194 │   │                                                                                     │\n│   1195 │   │   self.R = major_radius                                                             │\n│   1196 │   │   self.r = minor_radius                                                             │\n│ ❱ 1197 │   │   super().__init__(                                                                 │\n│   1198 │   │   │   self.func,                                                                    │\n│   1199 │   │   │   u_range=u_range,                                                              │\n│   1200 │   │   │   v_range=v_range,                                                              │\n│                                                                                                  │\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/mobject/thre │\n│ e_d/three_dimensions.py:116 in __init__                                                          │\n│                                                                                                  │\n│    113 │   ) -> None:                                                                            │\n│    114 │   │   self.u_range = u_range                                                            │\n│    115 │   │   self.v_range = v_range                                                            │\n│ ❱  116 │   │   super().__init__(**kwargs)                                                        │\n│    117 │   │   self.resolution = resolution                                                      │\n│    118    │   self.surface_piece_config = surface_piece_config                                  │\n│    119 │   │   self.fill_color = fill_color                                                      │\n│                                                                                                  │\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/mobject/type │\n│ s/vectorized_mobject.py:1835 in __init__                                                         │\n│                                                                                                  │\n│   1832 │   \"\"\"                                                                                   │\n│   1833 │                                                                                         │\n│   1834 │   def __init__(self, *vmobjects, **kwargs):                                             │\n│ ❱ 1835 │   │   super().__init__(**kwargs)                                                        │\n│   1836 │   │   self.add(*vmobjects)                                                              │\n│   1837 │                                                                                         │\n│   1838 │   def __repr__(self):                                                                   │\n│                                                                                                  │\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/mobject/type │\n│ s/vectorized_mobject.py:125 in __init__                                                          │\n│                                                                                                  │\n│    122 │   │   self.shade_in_3d = shade_in_3d                                                    │\n│    123 │   │   self.tolerance_for_point_equality = tolerance_for_point_equality                  │\n│    124 │   │   self.n_points_per_cubic_curve = n_points_per_cubic_curve                          │\n│ ❱  125 │   │   super().__init__(**kwargs)                                                        │\n│    126 │   │                                                                                     │\n│    127 │   │   if fill_color:                                                                    │\n│    128 │   │   │   self.fill_color = fill_color                                                  │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────╯\nTypeError: Mobject.__init__() got an unexpected keyword argument 'r1'\n(manim) davidrug@Davids-MBP-2 StereographicProjection % manim StereographicProjection.py -pql                                                   \nManim Community v0.17.3\n\n[01/20/24 20:56:35] INFO     Animation 0 : Using cached data (hash : 4266129954_51972775_3442269408)                        \n                                                                                                                            ╭───────────────────​‌​\n──────────── Traceback (most recent call last) ────────────────────────────────╮\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/cli/render/c │\n│ ommands.py:115 in render                                                                         │\n│                                                                                                  │\n│   112 │   │   │   try:                                                                           │\n│   113 │   │   │   │   with tempconfig({}):                                                       │\n│   114 │   │   │   │   │   scene = SceneClass()                                                   │\n│ ❱ 115 │   │   │   │   │   scene.render()                                                         │\n│   116 │   │   │   except Exception:                                                              │\n│   117 │   │   │   │   error_console.print_exception()                                            │\n│   118 │   │   │   │   sys.exit(1)                                                                │\n│                                                                                                  │\n│ /opt/homebrew/Caskroom/miniconda/base/envs/manim/lib/python3.11/site-packages/manim/scene/scene. │\n│ py:223 in render                                                                                 │\n│                                                                                                  │\n│    220 │   │   \"\"\"                                                                               │\n│    221 │   │   self.setup()                                                                      │\n│    222 │   │   try:                                                                              │\n│ ❱  223 │   │   │   self.construct()                                                              │\n│    224 │   │   except EndSceneEarlyException:                                                    │\n│    225 │   │   │   pass                                                                          │\n│    226 │   │   except RerunSceneException as e:                                                  │\n│                                                                                                  │\n│ /Users/davidrug/Library/Mobile                                                                   │\n│ Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection/StereographicProjectio │\n│ n.py:29 in construct                                                                             │\n│                                                                                                  │\n│   26 │   │   day_texture = \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Whole_w    │\n│   27 │   │   night_texture = \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/ba/The_e    │\n│   28 │   │                                                                                       │\n│ ❱ 29 │   │   surfaces = [                                                                        │\n│   30 │   │   │   TexturedSurface(surface, day_texture, night_texture)                            │\n│   31 │   │   │   for surface in [sphere, torus1, torus2]                                         │\n│   32 │   │   ]                                                                                   │\n│                                                                                                  │\n│ /Users/davidrug/Library/Mobile                                                                   │\n│ Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection/StereographicProjectio │\n│ n.py:30 in <listcomp>                                                                            │\n│                                                                                                  │\n│   27 │   │   night_texture = \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/ba/The_e    │\n│   28 │   │                                                                                       │\n│   29 │   │   surfaces = [                                                                        │\n│ ❱ 30 │   │   │   TexturedSurface(surface, day_texture, night_texture)                            │\n│   31 │   │   │   for surface in [sphere, torus1, torus2]                                         │\n│   32 │   │   ]                                                                                   │\n│   33                                                                                             │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────╯\nNameError: name 'TexturedSurface' is not defined\n(manim) davidrug@Davids-MBP-2 StereographicProjection % ",
			"settings":
			{
				"buffer_size": 24550,
				"line_ending": "Unix",
				"name": "Login Shell",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/c4dpy.sublime-build",
					""
				],
				[
					"Packages/User/c4dpy.sublime-build",
					"c4dpy"
				],
				[
					"Packages/User/c4dpy.sublime-build",
					"CPython"
				]
			],
			[
				"Packages/User/c4dpy.sublime-build",
				"CPython"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"co",
				"Copilot: Check Status"
			],
			[
				"co sign",
				"Copilot: Sign In"
			],
			[
				"copilo",
				"Preferences: LSP-copilot Settings"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"copilot",
				"Copilot: Check Status"
			],
			[
				"Copi",
				"Copilot: Check Status"
			],
			[
				"Cop",
				"Copilot: Sign In"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Install pa",
				"Package Control: Install Package"
			],
			[
				"Install Package Control",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 163.0,
		"history":
		[
			"import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 49466))",
			"import socket; socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((\"localhost\", 51216))"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/davidrug/Library/Mobile Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection"
	],
	"file_history":
	[
		"/Users/davidrug/Library/Mobile Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection/StereographicProjection",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/ad4m.py",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/raum_und_freude.py",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/manim.sublime-project",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/age_of_miracles.py",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/ataraxia.py",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/svg/Head with Shoulders_826.svg",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/media/images/age_of_miracles/Spirograph_ManimCE_v0.17.3.png",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/media/images/age_of_miracles/LiminalSpace0007.png",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/electromagnaetherism.py",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/keynote_shape_to_svg.py",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/media/videos/main/1080p30/MolochDissolve.mp4",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/media/images/main/FieldOfConsciousness_ManimCE_v0.17.3.png",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/main.py",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/media/videos/main/1080p60/TwoObjectsFalling.mp4",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/media/images/main/InterfaceSymbol.mov",
		"/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim/media/images/main/ElectricFieldExampleScene_ManimCE_v0.17.3.png",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/library/scripts/pydeation-testing/testing.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/scene.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/library/scripts/PyTalk-CustodianOfTheNoosphere/custodian_of_the_noosphere.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/abstract_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/line_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/xpresso/xpressions.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/custom_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/materials.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/animation/animation.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/camera_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/library/scripts/pydeation-PL-pitch/pitch.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/library/scripts/pytalk-interfaceguy-intro/interfaceguy_intro.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/effect_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/constants.py",
		"/Users/davidrug/Documents/InterfaceGuy/CodingAdventures/svg2key-cli/svg2keynote",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/animation/abstract_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/solid_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/sketch_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/assets/svg/right_eye.svg",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/assets/svg/wave.svg",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/__init__.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/xpresso/userdata.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/helper_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/xpresso/xpresso.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/action_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/animation/fill_animators.py",
		"/Users/davidrug/Library/Mobile Documents/com~apple~CloudDocs/Unclutter/Unclutter Files/fix_svg.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/assets/svg/man.svg",
		"/Users/davidrug/Library/Mobile Documents/com~apple~CloudDocs/Unclutter/Unclutter Files/run_clipboard.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/utils.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/imports.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/tags.py",
		"/Users/davidrug/Documents/Python/mac_adress_changer.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/animation/transition_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/light_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/animation/composed_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/animation/object_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/animation/sketch_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/objects/svg_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/document.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/python39/libs/pydeation/pydeation.sublime-project",
		"/Users/davidrug/Documents/Python/Projects/pydeation-horizon-border/README.md",
		"/Users/davidrug/Documents/Python/Projects/pydeation-horizon-border/horizon_border.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/library/scripts/pydeation-PL-pitch/README.md",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R26_8986B2D7/library/scripts/pydeation-testing/.gitignore",
		"/Users/davidrug/Library/Application Support/Sublime Text/Packages/User/Anaconda.sublime-settings",
		"/Users/davidrug/Library/Application Support/Sublime Text/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/pydeation-testing/testing.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/objects/abstract_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/scene.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/constants.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/xpresso/xpresso.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/xpresso/userdata.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/animation/sketch_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/animation/animation.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/xpresso/xpressions.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/objects/line_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/animation/fill_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/animation/abstract_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/animation/object_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/tags.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/imports.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/pydeation/objects/solid_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/pydeation/imports.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/pydeation/xpresso/xpresso.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/pydeation/xpresso/xpressions.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/xpresso/test.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/xpressions/userdata.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/xpressions.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/pydeationV2.sublime-project",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/pydeation.sublime-project",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/testProject/testProjectV2.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/materials.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/objects/helper_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/objects/solid_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/animation/composed_animators.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/objects/svg_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/memetics/memetics.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/testProject/closeDocs.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/fourier_transform/fourier_transform.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/testProject/testing.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeation/document.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/pitch/InterfaceGuy/pitch/pitch.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/scene/scene.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/animation/animator.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/object/mograph.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/constants.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/testProject/testProject.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/camera/camera.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/object/vector_graphics.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/object/object.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/assets/svg/tree.svg",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/assets/svg/david.svg",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/metadata.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/object/custom_objects.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/pitch/InterfaceGuy/stem/stem.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/pitch/InterfaceGuy/seed/seed.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/LICENSE",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/dialectic/DanielSchmachtenberger/left-right/left-right.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/branching/branching.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/dialectical_thinking/dialectical_thinking.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/intro/intro.py",
		"/Users/davidrug/Library/Mobile Documents/com~apple~CloudDocs/Unclutter/Unclutter Files/Ohne Titel 6.svg",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/project.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/assets/svg/gear_big.svg",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/diverse/InterfaceGuy/dialectic_transitions/dialectic.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/clips/DanielSchmachtenberger/NavigatingReality/navigating_reality.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/assets/svg/individual.svg",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/dialectic/DanielSchmachtenberger/being-becoming/being-becoming.py",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/python39/libs/pydeationlib/assets/svg/emu.svg",
		"/Users/davidrug/Library/Preferences/Maxon/Maxon Cinema 4D R25_EBA43BEE/library/scripts/PydeationProjects/dialectic/DanielSchmachtenberger/conservative-progressive/conservative-progressive.py"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 98.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"r1"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "StereographicProjection.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3170,
						"regions":
						{
						},
						"selection":
						[
							[
								638,
								638
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"copilot.completion._is_modified": false,
							"copilot.completion._is_saving": false,
							"copilot.completion.completion_index": 0,
							"copilot.completion.completion_style": "popup",
							"copilot.completion.completions":
							[
								{
									"displayText": " *",
									"docVersion": 32,
									"point": 17,
									"position":
									{
										"character": 17,
										"line": 0
									},
									"range":
									{
										"end":
										{
											"character": 17,
											"line": 0
										},
										"start":
										{
											"character": 0,
											"line": 0
										}
									},
									"region":
									[
										0,
										17
									],
									"text": "from manim import *",
									"uuid": "26bba60b-8f1b-435f-b717-c3d9203e87aa"
								}
							],
							"copilot.completion.is_visible": false,
							"copilot.completion.is_visible_panel_completions": false,
							"copilot.completion.is_waiting_completion": false,
							"copilot.completion.is_waiting_panel_completions": false,
							"copilot.completion.original_layout": null,
							"lsp_active": true,
							"lsp_uri": "file:///Users/davidrug/Library/Mobile%20Documents/iCloud%7Emd%7Eobsidian/Documents/InterBrain/StereographicProjection/StereographicProjection.py",
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24550,
						"regions":
						{
						},
						"selection":
						[
							[
								24550,
								24550
							]
						],
						"settings":
						{
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"color_scheme": "Terminus.hidden-color-scheme",
							"copilot.completion._is_modified": false,
							"copilot.completion.is_visible": false,
							"copilot.completion.is_visible_panel_completions": false,
							"copilot.completion.is_waiting_completion": false,
							"copilot.completion.is_waiting_panel_completions": false,
							"copilot.completion.original_layout": null,
							"default_dir": "/Users/davidrug/Documents/Ataraxia/InterfaceGuy/CodingAdventures/manim",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"is_widget": true,
							"lsp_uri": "buffer:83",
							"result_base_dir": "/Users/davidrug/Library/Mobile Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								500
							],
							"scroll_past_end": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminus.highlight_counter": 1047,
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"/bin/zsh",
									"-i",
									"-l"
								],
								"cwd": "/Users/davidrug/Library/Mobile Documents/iCloud~md~obsidian/Documents/InterBrain/StereographicProjection",
								"default_title": "Login Shell",
								"env":
								{
									"LANG": "en_US.UTF-8",
									"TERM": "linux",
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": "Terminus",
								"reactivable": true,
								"show_in_panel": null,
								"tag": null,
								"timeit": false,
								"title": null
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": true,
							"terminus_view.reactivable": true,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 3810.0,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 3810.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.613272511186,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 170.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.mdpopups-dummy":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 109.0
	},
	"pinned_build_system": "c4d",
	"project": "StereographicProjection.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/Python/Projects/pydeation/pydeation.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 324.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
